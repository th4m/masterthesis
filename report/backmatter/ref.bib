@article{Ingerman:1961:TWC:366062.366084,
 author = {Ingerman, P. Z.},
 title = {{Thunks: A Way of Compiling Procedure Statements with Some Comments on Procedure Declarations}},
 journal = {Commun. ACM},
 issue_date = {Jan. 1961},
 volume = {4},
 number = {1},
 month = jan,
 year = {1961},
 issn = {0001-0782},
 pages = {55--58},
 numpages = {4},
 acmid = {366084},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@article{Hu1989,
author={Hughes, John},
title={{Why Functional Programming Matters}},
journal={Computer Journal},
issn={0010-4620},
volume={32},
issue={2},
pages={98-107},
year={1989},
}

@article{Hu2015,
author={Hu, Z. J. and Hughes, John and Wang, M.},
title={{How functional programming mattered}},
journal={National Science Review},
issn={2095-5138},
volume={2},
issue={3},
pages={349-370},
abstract={In 1989 when functional programming was still considered a niche topic, Hughes wrote a visionary paper arguing convincingly 'why functional programming matters'. More than two decades have passed. Has functional programming really mattered? Our answer is a resounding 'Yes!'. Functional programming is now at the forefront of a new generation of programming technologies, and enjoying increasing popularity and influence. In this paper, we review the impact of functional programming, focusing on how it has changed the way we may construct programs, the way we may verify programs, and fundamentally the way we may think about programs.},
year={2015},
keywords={functional programming, functional languages, equational reasoning, monad, high order function},
}

@article{Ennals:2003:OEA:944746.944731,
 author = {Ennals, Robert and Jones, Simon Peyton},
 title = {{Optimistic Evaluation: An Adaptive Evaluation Strategy for Non-strict Programs}},
 journal = {SIGPLAN Not.},
 issue_date = {September 2003},
 volume = {38},
 number = {9},
 month = aug,
 year = {2003},
 issn = {0362-1340},
 pages = {287--298},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/944746.944731},
 doi = {10.1145/944746.944731},
 acmid = {944731},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {haskell, lazy evaluation, online profiling},
}

@article{kulkarnitranspiler,
  title={{Transpiler and it’s Advantages}},
  author={Kulkarni, Rohit and Chavan, Aditi and Hardikar, Abhinav},
  publisher={Citeseer}
}

@inproceedings{Claessen:2000:QLT:351240.351266,
 author = {Claessen, Koen and Hughes, John},
 title = {{QuickCheck: A Lightweight Tool for Random Testing of Haskell Programs}},
 booktitle = {Proceedings of the Fifth ACM SIGPLAN International Conference on Functional Programming},
 series = {ICFP '00},
 year = {2000},
 isbn = {1-58113-202-6},
 pages = {268--279},
 numpages = {12},
 url = {http://doi.acm.org.proxy.lib.chalmers.se/10.1145/351240.351266},
 doi = {10.1145/351240.351266},
 acmid = {351266},
 publisher = {ACM},
 address = {New York, NY, USA},
}


@misc{Lazyeval6:online,
author = {},
title = {{Lazy evaluation - HaskellWiki}},
howpublished = {\url{https://wiki.haskell.org/Lazy_evaluation}},
month = {},
year = {},
note = {(Accessed on 2017-05-05)}
}

@misc{ThunkHas27:online,
author = {},
title = {{Thunk - HaskellWiki}},
howpublished = {\url{https://wiki.haskell.org/Thunk}},
month = {},
year = {},
note = {(Accessed on 2017-01-19)}
}

@misc{Introduc44:online,
author = {},
title = {{Introduction to QuickCheck1 - HaskellWiki}},
howpublished = {\url{https://wiki.haskell.org/Introduction_to_QuickCheck1}},
month = {},
year = {},
note = {(Accessed on 2017-01-19)}
}

@misc{CakeML25:online,
author = {},
title = {{CakeML}},
howpublished = {\url{https://cakeml.org/}},
month = {},
year = {},
note = {(Accessed on 2017-04-13)}
}

@misc{HOLInter57:online,
author = {},
title = {{HOL Interactive Theorem Prover}},
howpublished = {\url{https://hol-theorem-prover.org/}},
month = {},
year = {},
note = {(Accessed on 2017-01-19)}
}

@misc{Lem33:online,
author = {},
title = {{Lem}},
howpublished = {\url{https://www.cl.cam.ac.uk/~pes20/lem/}},
month = {},
year = {},
note = {(Accessed on 2017-02-10)}
}

@misc{Undefine63:online,
author = {},
title = {{Undefined - HaskellWiki}},
howpublished = {\url{https://wiki.haskell.org/Undefined}},
month = {},
year = {},
note = {(Accessed on 2017-04-18)}
}

@misc{MonadHas66:online,
author = {},
title = {{Monad - HaskellWiki}},
howpublished = {\url{https://wiki.haskell.org/Monad}},
month = {},
year = {},
note = {(Accessed on 2017-05-31)}
}

@misc{AllAbout63:online,
author = {},
title = {{All About Monads - HaskellWiki}},
howpublished = {\url{https://wiki.haskell.org/All_About_Monads}},
month = {},
year = {},
note = {(Accessed on 2017-05-31)}
}

@misc{StateMon99:online,
author = {},
title = {{State Monad - HaskellWiki}},
howpublished = {\url{https://wiki.haskell.org/State_Monad}},
month = {},
year = {},
note = {(Accessed on 2017-05-31)}
}

@misc{Performa16:online,
author = {},
title = {{Performance/Strictness - HaskellWiki}},
howpublished = {\url{https://wiki.haskell.org/Performance/Strictness#Evaluating_expressions_strictly}},
month = {},
year = {},
note = {(Accessed on 2017-06-15)}
}


@incollection {haltingproblem,
author = {Andrew Butterfield and Gerard Ekembe Ngondi},
title = {{Halting problem}},
booktitle = {A Dictionary of Computer Science},
publisher = {Oxford University Press},
isbn = {9780199688975},
url = {http://www.oxfordreference.com/10.1093/acref/9780199688975.001.0001/acref-9780199688975-e-2296},
year = {2016},
edition = {7th}
}

@inproceedings{Takano:2015:TRL:2695664.2695693,
 author = {Takano, Yasunao and Iwasaki, Hideya},
 title = {{Thunk Recycling for Lazy Functional Languages: Operational Semantics and Correctness}},
 booktitle = {Proceedings of the 30th Annual ACM Symposium on Applied Computing},
 series = {SAC '15},
 year = {2015},
 isbn = {978-1-4503-3196-8},
 location = {Salamanca, Spain},
 pages = {2079--2086},
 numpages = {8},
 url = {http://doi.acm.org.proxy.lib.chalmers.se/10.1145/2695664.2695693},
 doi = {10.1145/2695664.2695693},
 acmid = {2695693},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {bisimulation, haskell, lazy evaluation, optimization, semantics, small-step operational semantics, thunk},
} 

@inproceedings{Kumar:2014:CVI:2535838.2535841,
 author = {Kumar, Ramana and Myreen, Magnus O. and Norrish, Michael and Owens, Scott},
 title = {{CakeML: A Verified Implementation of ML}},
 booktitle = {Proceedings of the 41st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '14},
 year = {2014},
 isbn = {978-1-4503-2544-8},
 location = {San Diego, California, USA},
 pages = {179--191},
 numpages = {13},
 url = {http://doi.acm.org.proxy.lib.chalmers.se/10.1145/2535838.2535841},
 doi = {10.1145/2535838.2535841},
 acmid = {2535841},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {ML, compiler bootstrapping, compiler verification, machine code verification, read-eval-print loop, verified garbage collection., verified parsing, verified type checking},
}

@inproceedings{LemPaper,
author={Owens,Scott and Böhm,Peter and Zappa Nardelli,Francesco and Sewell,Peter},
editor={ },
year={2011},
title={{Lem: A lightweight tool for heavyweight semantics}},
volume={6898},
pages={363-369},
isbn={0302-9743},
language={English},
}



@book{Fernand:PLangOpSem,
  author = {Maribel Fernández},
  title = {{Programming Languages and Operational Semantics}},
  year = {2014},
  publisher = {Springer London},
  isbn = {978-1-4471-6367-1}
}

@book{DragonBook,
author={Aho,Alfred V. and Lam,Monica S. and Sethi,Ravi and Ullman,Jeffrey D.},
year={2014},
title={{Compilers: principles, techniques, and tools}},
publisher={Pearson},
address={Harlow, Essex},
edition={Second;Pearson new international;},
abstract={Compilers: Principles, Techniques and Tools, known to professors, students, and developers worldwide as the "Dragon Book," is available in a new edition. Every chapter has been completely revised to reflect developments in software engineering, programming languages, and computer architecture that have occurred since 1986, when the last edition published. The authors, recognizing that few readers will ever go on to construct a compiler, retain their focus on the broader set of problems faced in software design and software development. New chapters include: Chapter 10 Instruction-Level Parallelism Chapter 11 Optimizing for Parallelism and Locality Chapter 12 Interprocedural Analysis},
keywords={Compilers (Computer programs)},
isbn={9781292037233;1292037237;},
language={English},
}

@book{JavaJVM,
author={Stärk,Robert F. and Schmid,Joachim and Börger,Egon},
year={2001},
title={{Java and the Java Virtual Machine: Definition, Verification, Validation}},
publisher={Springer Berlin Heidelberg},
address={Berlin, Heidelberg},
edition={1},
abstract={This book provides a high-level description, together with a mathematical and an experimental analysis, of Java and of the Java Virtual Machine (JVM), including a standard compiler of Java programs to JVM code and the security critical bytecode verifier component of the JVM. The description is structured into language layers and machine components. It comes with a natural executable refinement  which can be used for testing code. The method developed for this purpose is based on Abstract State Machines (ASMs) and can be applied to other virtual machines and to other programming languages as well. The book is written for advanced students and for professionals and practitioners in research and development who need for their work a complete and transparent definition and an executable model of the language and of the virtual machine underlying its intended implementation.;This book provides a high-level description, together with a mathematical and an experimental analysis, of Java and of the Java Virtual Machine (JVM), including a standard compiler of Java programs to JVM code and the security critical bytecode verifier component of the JVM. The description is structured into language layers and machine components. It comes with a natural executable refinement which can be used for testing code. The method developed for this purpose is based on Abstract State Machines (ASMs) and can be applied to other virtual machines and to other programming languages as well. The book is written for advanced students and for professionals and practitioners in research and development who need for their work a complete and transparent definition and an executable model of the language and of the virtual machine underlying its intended implementation.;},
keywords={Software engineering; Computer science; COMPUTERS; Programming General; Java (Computer program language); Programming Languages, Compilers, Interpreters; Computer programming; Programming languages (Electronic computers); Programming Techniques},
isbn={3642594956;3642639976;9783642639975;9783642594953;},
language={English},
}

@book{pltbook,
author={Ranta,Aarne and Forsberg,Markus},
year={2012},
title={{Implementing programming languages: an introduction to compilers and interpreters}},
publisher={College Publications},
address={London},
volume={16.},
keywords={Compilers (Computer programs); Interpreters (Computer programs)},
isbn={9781848900646;1848900643;},
language={English},
}

@book{learnhaskell,
author={Lipovača,Miran and Books24x7 (e-book collection) and Books24x7,Inc},
year={2012;2011;},
title={{Learn you a Haskell for great good: a beginner's guide}},
publisher={No Starch Press},
address={San Francisco, CA},
edition={1},
abstract={Learn You a Haskell for Great Good! (LYAH!) is a fun, illustrated guide to learning Haskell, a functional programming language that's growing in popularity. LYAH! introduces programmers familiar with imperative languages (such as C++, Java, or Python) to the unique aspects of functional programming. Packed with jokes, pop culture references, and the author's own hilarious artwork, LYAH! eases the learning curve of this complex language, and is a perfect starting point for any programmer looking to expand their horizons. The well-known web tutorial on which this book is based is widely regarded as the best way for beginners to learn Haskell, and receives over 30,000 unique visitors monthly.},
keywords={Haskell (Computer program language)},
isbn={9781593272838;1593272839;},
language={English},
}

@book{csharp,
author={Sturm,Oliver and Books24x7 (e-book collection) and Ebook Central (e-book collection) and Books24x7,Inc},
year={2011},
title={{Professional functional programming in C\#: classic programming techniques for modern projects}},
publisher={Wiley},
address={Chichester, West Sussex, U.K},
isbn={9780470744581;047097110X;9780470971109;0470970286;0470971096;9780470971093;0470744588;9780470970287;},
language={English},
}

@misc{LazyTCla1:online,
author = {},
title = {{Lazy(T) Class (System)}},
howpublished = {\url{https://msdn.microsoft.com/en-us/library/dd642331(v=vs.110).aspx}},
month = {},
year = {},
note = {(Accessed on 2017-06-15)}
}